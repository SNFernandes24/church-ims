name: Test

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev

    - name: Authenticate gcloud
      run: |
        chmod +x ./scripts/authenticate_gcloud.sh
        ./scripts/authenticate_gcloud.sh
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Collect the static files
      run: |
        chmod +x ./scripts/collectstatic.sh
        ./scripts/collectstatic.sh
      env:
        ADMINS: ${{ secrets.ADMINS }}
        ADMIN_URL: ${{ secrets.ADMIN_URL }}
        DJANGO_EMAIL_HOST_USER: ${{ secrets.DJANGO_EMAIL_HOST_USER }}
        DJANGO_EMAIL_HOST_PASSWORD: ${{ secrets.DJANGO_EMAIL_HOST_PASSWORD }}
        GCP_STORAGE_BUCKET_NAME: ${{secrets.GCP_STORAGE_BUCKET_NAME }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Set the DATABASE_URL
      run: |
        echo "DATABASE_URL=postgresql://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME" >> $GITHUB_ENV
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: localhost
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{secrets.DB_PASSWORD }}

    - name: Run Tests
      run: |
        pipenv run coverage run manage.py test --shuffle
      env:
        # Django Core
        DJANGO_SETTINGS_MODULE: config.settings.production
        SECURE_SSL_REDIRECT: False
        SECURE_HSTS_SECONDS: 0

        # Email
        ADMINS: ${{ secrets.ADMINS }}
        DJANGO_EMAIL_HOST_USER: ${{ secrets.DJANGO_EMAIL_HOST_USER }}
        DJANGO_EMAIL_HOST_PASSWORD: ${{ secrets.DJANGO_EMAIL_HOST_PASSWORD }}

        # Google Cloud
        GCP_STORAGE_BUCKET_NAME: ${{secrets.GCP_STORAGE_BUCKET_NAME }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

        # Project specific
        ADMIN_URL: ${{ secrets.ADMIN_URL }}
        SCREENSHOT: ${{ secrets.SCREENSHOT }}

    - name: Submit test coverage data to coveralls.io
      run: pipenv run coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
