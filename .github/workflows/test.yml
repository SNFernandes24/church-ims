name: Test

on:
  push:
  pull_request:
    branches: [ main, prod ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]

    services:
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # ports:
          # Maps the TCP port on service container to the host
          # - 5432: ${{ secrets.DB_PORT }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
    - name: Run Tests
      run: |
        pipenv run coverage run manage.py test
      env:
        # Django Core
        DJANGO_SETTINGS_MODULE: config.settings.base

        # Database
        DATABASE_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}

        # Email
        DJANGO_EMAIL_HOST_USER: ${{ secrets.DJANGO_EMAIL_HOST_USER }}
        DJANGO_EMAIL_HOST_PASSWORD: ${{ secrets.DJANGO_EMAIL_HOST_PASSWORD }}

    - name: Submit test coverage data to coverage.io
      run: pipenv run coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
